       IDENTIFICATION DIVISION.
      *================================================================*
       PROGRAM-ID.    AMLS302   INITIAL.
       AUTHOR.        PEDRO GARCIA
       INSTALLATION.  BBI SA.
       DATE-WRITTEN.  2018-AGO-16.
     š*----------------------------------------------------------------*
     š*   APLICACO .......: AML - Profiling                            *
     š*   OBJECTIVO ......: Este programa destina-se a extrair         *
     š*                     a informação de Contas para FCM            *
     š*   ANALISTA .......: PEDRO GARCIA                               *
     š*   PROGRAMADOR.....:                                            *
     š*================================================================*
       ENVIRONMENT DIVISION.
      *================================================================*
      *----------------------------------------------------------------*
       CONFIGURATION SECTION.
      *----------------------------------------------------------------*
       SOURCE-COMPUTER.    IBM-AS400.
       OBJECT-COMPUTER.    IBM-AS400.
       SPECIAL-NAMES.   DECIMAL-POINT IS COMMA.
      *----------------------------------------------------------------*
       INPUT-OUTPUT SECTION.
      *----------------------------------------------------------------*
      *================================================================*
       DATA DIVISION.
      *================================================================*
       FILE SECTION.
      *----------------------------------------------------------------*
      *----------------------------------------------------------------*
       WORKING-STORAGE SECTION.
      *-----------------------------------------------------------------
      *
       01 EXECUTA-P001               PIC 9(01).
          88 INICIO-P001             VALUE 0.
          88 FIM-P001                VALUE 1.
      *
       01 EXISTE-INFO                PIC 9(01).
          88 SIM-EXISTE              VALUE 1.
          88 NAO-EXISTE              VALUE 0.
      *
       01 EXISTE-DO                  PIC 9(01).
          88 SIM-EXISTE-DO           VALUE 1.
          88 NAO-EXISTE-DO           VALUE 0.
      *
       01 NR-READ                    PIC 9(06) VALUE ZEROS.
       01 NR-PROC                    PIC 9(06) VALUE ZEROS.
       01 NR-ERR                     PIC 9(06) VALUE ZEROS.

       01 W-DATA-SYS                 PIC 9(08).
       01 W-DATA-SYS-R REDEFINES W-DATA-SYS.
          05 W-DATA-SYS-SC           PIC 9(02).
          05 W-DATA-SYS-AAMMDD       PIC 9(06).
     š*
       01 WS-DATA-CONVER.
          03 WS-ANOIN                PIC X(04).
          03 FILLER                  PIC X VALUE "-".
          03 WS-MESIN                PIC X(02).
          03 FILLER                  PIC X VALUE "-".
          03 WS-DIAIN                PIC X(02).
     š*
       01 WX-DATA-CONVER.
          03 WS-ANOIN                PIC X(04).
          03 WS-ANOIN-R  REDEFINES WS-ANOIN.
             05 WR-ANOIN-CC          PIC X(02).
             05 WR-ANOIN-AA          PIC X(02).
          03 WS-MESIN                PIC X(02).
          03 WS-DIAIN                PIC X(02).
       01 WR-DATA-CONVER  REDEFINES  WX-DATA-CONVER     PIC X(8).
     š*
       01 WN-DATA-CONVER.
          03 Filler                  PIC X(01).
          03 WN-ANOIN                PIC X(04).
          03 WN-MESIN                PIC X(02).
          03 WN-DIAIN                PIC X(02).
       01 WY-DATA-CONVER  REDEFINES  WN-DATA-CONVER     PIC 9(9).
     š*
       01 WX-ANO-CONVER.
          03 WS-ANO-12               PIC X(02).
          03 WS-ANO-34               PIC X(02).

       01  W-CONSTANTS.
           05  K-APLICACAO           PIC X(3)    VALUE "AML".
           05  K-PROGRAMA            PIC X(8)    VALUE "AMLS302".

       01 WS-STRING.
          05 WS-STRING-CHR           PIC X       OCCURS 300.
       01 WS-CTADO                   PIC X(35).
       01 WX-CTADO  REDEFINES WS-CTADO.
          05 WS-RACINE-CTADO       PIC X(07).
          05 WS-GRE-CTADO          PIC X(03).
          05 WS-RUB-CTADO          PIC X(03).
          05 WS-MON-CTADO          PIC X(03).

      *----------------------------------------------------------------*
      * AREAS LIGACAO C/ SUB-ROTINAS
      *----------------------------------------------------------------*
      *----------------------------------------------------------------*
      *    DECLARACOES P/ INTERFACE C/ DB2
      *----------------------------------------------------------------*
           EXEC SQL BEGIN DECLARE SECTION END-EXEC.

           EXEC SQL
                INCLUDE SQLCA
           END-EXEC.

      * COPY BOOK DO MODULO DE ERROS
           EXEC SQL INCLUDE CPYW999 END-EXEC.

       01  WS-TMS-NULA     PIC  X(26)
                           VALUE "0001-01-01-00.00.00.000000".
       01  WS-DATA-DIA.
           03  WS-ANOIN-DIA         PIC 9(04).
           03  FILLER               PIC X VALUE "-".
           03  WS-MESIN-DIA         PIC 9(02).
           03  FILLER               PIC X VALUE "-".
           03  WS-DIAIN-DIA         PIC 9(02).

       01  WS-DATA-PROC.
           03  WS-ANO-PROC          PIC 9(04).
           03  FILLER               PIC X VALUE "-".
           03  WS-MES-PROC          PIC 9(02).
           03  FILLER               PIC X VALUE "-".
           03  WS-DIA-PROC          PIC 9(02).

       01 WS-DUMMY                  PIC S9(1)       VALUE  ZERO.
       01 WS-TST-DATE               PIC X(10).
       01 WS-VAL-DATE               PIC X(10).
       01 WS-MVDTA                  PIC S9(09).
       01 MV-DTMIN                  PIC S9(09).
       01 MV-DTMAX                  PIC S9(09).

       01 WS-RACINE                 PIC X(07).
       01 WS-CPGRE                  PIC X(03).
       01 WS-CPRUB                  PIC X(03).
       01 WS-CPMON                  PIC X(03).

     š* Copy : Tabela de Intervenientes Nova
           EXEC SQL
               INCLUDE AMLH302N
           END-EXEC.

     š* Copy : Tabela de Saldos de Conta
       01  R-FDBCPT.
           COPY DDS-ALL-FORMATS OF FDBCPT.
     š* Copy : Tabelas
       01  R-FDBTAB.
           COPY DDS-ALL-FORMATS OF FDBTAB.
     š* Copy : Tabela de Other Numbering
       01  R-FDBNUM.
           COPY DDS-ALL-FORMATS OF FDBNUM.
     š* Copy : Tabela de AMLT900A
       01  R-AMLT900A.
           COPY DDS-ALL-FORMATS OF AMLT900A.

           EXEC SQL END  DECLARE SECTION END-EXEC.
      *----------------------------------------------------------------*
       LINKAGE SECTION.
      *----------------------------------------------------------------*
           COPY AMLB302.
      *================================================================*
       PROCEDURE DIVISION USING AMLB302-LKPARMS.
      *================================================================*
       P000-INICIO.
           EXEC SQL
                 WHENEVER  SQLERROR  CONTINUE
           END-EXEC.
           PERFORM P001-INICIO
     š*- Dados de Cliente
           PERFORM P300-GET-FDBCPT.
     š*- Companhia
           MOVE "BBI"               TO  AMLH302N-COMPANY
     š*- Companhia
           MOVE  WS-RACINE          TO  WS-RACINE-CTADO
           MOVE  WS-CPGRE           TO  WS-GRE-CTADO
           MOVE  WS-CPRUB           TO  WS-RUB-CTADO
           MOVE  WS-CPMON           TO  WS-MON-CTADO
           MOVE  WX-CTADO           TO  AMLH302N-ACTNBR
     š*- Tipo de Conta
           MOVE "Conta Ordem"       TO  AMLH302N-ACTTYPE
     š*- Gestor de Cliente
           MOVE CPOPRN OF R-FDBCPT  TO  AMLH302N-OFFICER
     š*- Data de Abertura
           IF CPDTOU  OF R-FDBCPT NOT EQUAL SPACES
             MOVE CPDTOU OF R-FDBCPT(1:2) TO WS-DIAIN  OF WX-DATA-CONVER
             MOVE CPDTOU OF R-FDBCPT(3:2) TO WS-MESIN  OF WX-DATA-CONVER
             MOVE "20"              TO WR-ANOIN-CC
             MOVE CPDTOU OF R-FDBCPT(5:2)
                                    TO WR-ANOIN-AA
             MOVE CORR  WX-DATA-CONVER    TO WS-DATA-CONVER
             MOVE WX-DATA-CONVER          TO AMLH302N-DTOPEN
           ELSE
             MOVE SPACES                  TO AMLH302N-DTOPEN
           END-IF
           MOVE WS-DATA-CONVER            TO WS-TST-DATE
           PERFORM P450-VALIDA-DATA
           IF WS-TST-DATE  EQUAL SPACES
             MOVE WS-TST-DATE               TO AMLH302N-DTOPEN
           END-IF
     š*- Data de Encerramento
           IF CPDTAN  OF R-FDBCPT NOT EQUAL SPACES
             MOVE CPDTAN OF R-FDBCPT(1:2) TO WS-DIAIN  OF WX-DATA-CONVER
             MOVE CPDTAN OF R-FDBCPT(3:2) TO WS-MESIN  OF WX-DATA-CONVER
             MOVE "20"              TO WR-ANOIN-CC
             MOVE CPDTAN OF R-FDBCPT(5:2)
                                    TO WR-ANOIN-AA
             MOVE CORR  WX-DATA-CONVER    TO WS-DATA-CONVER
             MOVE WX-DATA-CONVER          TO AMLH302N-DTCLOSE
           ELSE
             MOVE SPACES                  TO AMLH302N-DTCLOSE
           END-IF
           MOVE WS-DATA-CONVER            TO WS-TST-DATE
           PERFORM P450-VALIDA-DATA
           IF WS-TST-DATE = SPACES
             MOVE WS-TST-DATE               TO AMLH302N-DTCLOSE
           END-IF
     š*- Data de Ultimo Movimento
           IF CPDTDM  OF R-FDBCPT NOT EQUAL SPACES AND
              CPDTDM  OF R-FDBCPT NOT EQUAL "00000000"
             MOVE CPDTDM OF R-FDBCPT(7:2) TO WS-DIAIN  OF WX-DATA-CONVER
             MOVE CPDTDM OF R-FDBCPT(5:2) TO WS-MESIN  OF WX-DATA-CONVER
             MOVE CPDTDM OF R-FDBCPT(1:4) TO WS-ANOIN  OF WX-DATA-CONVER
             MOVE CORR  WX-DATA-CONVER    TO WS-DATA-CONVER
             MOVE WX-DATA-CONVER     TO AMLH302N-DTLMOV
           ELSE
             MOVE SPACES                  TO AMLH302N-DTLMOV
           END-IF
           MOVE WS-DATA-CONVER            TO WS-TST-DATE
           PERFORM P450-VALIDA-DATA
           IF WS-TST-DATE = SPACES
             MOVE WS-TST-DATE             TO AMLH302N-DTLMOV
           END-IF
     š*- Moeda ALFA (FDBRAB = 40 )
           PERFORM P300-MOEDA-ALFA
     š*- Saldo
           MOVE CPSOLD OF R-FDBCPT  TO  AMLH302N-BALANCE
     š*- Código Categoria
           MOVE CPGRE  OF R-FDBCPT  TO  AMLH302N-CDCATG
     š*- Código Categoria
           MOVE CPRACI OF R-FDBCPT  TO  AMLH302N-ACTCUST
     š*- Tipo de Conta
           MOVE SPACES              TO  AMLH302N-HLDTYP
     š*- Código Status
           IF CPETAT   OF R-FDBCPT = SPACES
             MOVE "N"               TO  AMLH302N-STATUS
           ELSE
             MOVE "Y"               TO  AMLH302N-STATUS
           END-IF
     š*- M - Bloqueio a Débito / P Bloqueio a Crédito
     š*- Código Bloqueio
           IF CPETAT   OF R-FDBCPT = "B" OR = "M" OR = "P"
             MOVE "Y"               TO  AMLH302N-INDBLOCK
           ELSE
             MOVE "N"               TO  AMLH302N-INDBLOCK
           END-IF
     š*- Datas de Abertura
           MOVE SPACES                  TO  AMLH302N-DTROPEN
           PERFORM  P300-DATA-ABERT-EFECTIVA
           IF MV-DTMIN NOT EQUAL ZEROS
             MOVE MV-DTMIN              TO  WY-DATA-CONVER
             MOVE WN-ANOIN              TO  WS-ANOIN OF WS-DATA-CONVER
             MOVE WN-MESIN              TO  WS-MESIN OF WS-DATA-CONVER
             MOVE WN-DIAIN              TO  WS-DIAIN OF WS-DATA-CONVER
             MOVE WS-DATA-CONVER        TO  AMLH302N-DTROPEN
                                            WS-TST-DATE
             PERFORM P450-VALIDA-DATA
             IF WS-TST-DATE  EQUAL SPACES
              MOVE WS-TST-DATE         TO AMLH302N-DTROPEN
             END-IF
           ELSE
             MOVE SPACES                TO  AMLH302N-DTROPEN
           END-IF
     š*- Datas de Desbloqueio
            MOVE SPACES              TO  AMLH302N-DTUNBLOCK
            PERFORM  P300-DATA-UNBLOCK
            IF MV-DTMAX  NOT EQUAL ZEROS
              MOVE MV-DTMAX            TO  WY-DATA-CONVER
              MOVE WN-ANOIN            TO  WS-ANOIN OF WS-DATA-CONVER
              MOVE WN-MESIN            TO  WS-MESIN OF WS-DATA-CONVER
              MOVE WN-DIAIN            TO  WS-DIAIN OF WS-DATA-CONVER
              MOVE WS-DATA-CONVER      TO  AMLH302N-DTUNBLOCK
                                           WS-TST-DATE
              PERFORM P450-VALIDA-DATA
              IF WS-TST-DATE  EQUAL SPACES
                MOVE WS-TST-DATE       TO  AMLH302N-DTUNBLOCK
              END-IF
            ELSE
              MOVE SPACES              TO  AMLH302N-DTUNBLOCK
            END-IF
     š*- Datas de Bloqueio
           IF AMLH302N-DTUNBLOCK NOT EQUAL SPACES OR
              AMLH302N-INDBLOCK = "Y"
             MOVE SPACES                  TO  AMLH302N-DTBLOCK
             PERFORM  P300-DATA-BLOCK
             IF MV-DTMAX  NOT EQUAL ZEROS
               MOVE MV-DTMAX            TO  WY-DATA-CONVER
               MOVE WN-ANOIN            TO  WS-ANOIN OF WS-DATA-CONVER
               MOVE WN-MESIN            TO  WS-MESIN OF WS-DATA-CONVER
               MOVE WN-DIAIN            TO  WS-DIAIN OF WS-DATA-CONVER
               MOVE WS-DATA-CONVER      TO  AMLH302N-DTBLOCK
                                            WS-TST-DATE
               PERFORM P450-VALIDA-DATA
               IF WS-TST-DATE  EQUAL SPACES
                 MOVE WS-TST-DATE         TO  AMLH302N-DTBLOCK
               END-IF
             ELSE
               MOVE SPACES              TO  AMLH302N-DTBLOCK
             END-IF
           END-IF
     š*- INSERT
           IF AMLB302-PROC-OK
             PERFORM P500-SET-NULLS-ALMJ302
             PERFORM P500-INSERT-AMLJ302
           END-IF.

           PERFORM P999-FIMPGM.
     š*---------------------------------------------------------------------
       P001-INICIO.
     š*---------------------------------------------------------------------
           INITIALIZE  AMLH302N-REC
                       REPLACING ALPHANUMERIC BY SPACES
                                     NUMERIC BY ZEROS.
           EXEC SQL SET :S-SYSTMST = CURRENT TIMESTAMP END-EXEC.
           MOVE S-SYSTMST(1:10)   TO WS-DATA-DIA.
           MOVE  AMLB302-CPRACI   TO WS-RACINE
           MOVE  AMLB302-CPGRE    TO WS-CPGRE
           MOVE  AMLB302-CPRUB    TO WS-CPRUB
           MOVE  AMLB302-CPMON    TO WS-CPMON
           MOVE  AMLB302-DTPROC   TO WS-DATA-PROC.
     š*-
     š*----------------------------------------------------------------
       P300-MOEDA-ALFA.
     š*----------------------------------------------------------------
     š*- Descodifica MON  pela Tabela 040
     š*-
           INITIALIZE  R-FDBTAB
                       REPLACING ALPHANUMERIC BY SPACES
                                     NUMERIC BY ZEROS.

           EXEC SQL
                 SELECT SUBSTR(A.TBCOMP, 1, 3 )
                  INTO :AMLH302N-CDCURR
                  FROM  FDBTAB A
                  WHERE A.TBID   = "040"
                   AND  A.TBCODE = :WS-CPMON
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
             CONTINUE
           WHEN SQLCODE-NOTFOUND
             MOVE SPACES TO AMLH302N-CDCURR
           WHEN OTHER
              MOVE SPACES TO AMLH302N-CDCURR
              MOVE "FDBTAB"            TO W-OBJECT-NAME
              SET CMD-SELECT           TO TRUE
              PERFORM  P990-ERRO-DB2
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P300-DATA-ABERT-EFECTIVA.
     š*----------------------------------------------------------------
     š*-
     š*- Acede FDBMVT
           MOVE ZEROS TO MV-DTMIN

           EXEC SQL
                SELECT  value(MIN(MVDTVA)  , 0 )
                INTO   :MV-DTMIN
                FROM FDBMVT
                       WHERE MVRACI  = :WS-RACINE
                         AND MVGRE   = :WS-CPGRE
                         AND MVRUB   = :WS-CPRUB
                         AND MVMON   = :WS-CPMON
                  END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
              CONTINUE
           WHEN OTHER
              MOVE ZEROS TO MV-DTMIN
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P300-DATA-BLOCK.
     š*----------------------------------------------------------------
     š*-
     š*- Acede FDHCPT
           MOVE ZEROS TO MV-DTMAX

           EXEC SQL
                SELECT  value(MAX(CPCTLD)  , 0 )
                INTO   :MV-DTMAX
                FROM FDHCPT
                       WHERE CPRACI  = :WS-RACINE
                         AND CPGRE   = :WS-CPGRE
                         AND CPRUB   = :WS-CPRUB
                         AND CPMON   = :WS-CPMON
                         AND CPETAT  = " "
                  END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
              CONTINUE
           WHEN OTHER
              MOVE ZEROS TO MV-DTMAX
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P300-DATA-UNBLOCK.
     š*----------------------------------------------------------------
     š*-
     š*- Acede FDHCPT
           MOVE ZEROS TO MV-DTMAX

           EXEC SQL
                SELECT  VALUE(MAX(CPCTLD)  , 0 )
                INTO   :MV-DTMAX
                FROM FDHCPT
                       WHERE CPRACI  = :WS-RACINE
                         AND CPGRE   = :WS-CPGRE
                         AND CPRUB   = :WS-CPRUB
                         AND CPMON   = :WS-CPMON
                         AND CPETAT  = "B"
                  END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
              CONTINUE
           WHEN OTHER
              MOVE ZEROS TO MV-DTMAX
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P300-GET-FDBCPT.
     š*----------------------------------------------------------------
     š*-
     š*- Obtem Informação Mestre de Saldos
           INITIALIZE  R-FDBCPT
                       REPLACING ALPHANUMERIC BY SPACES
                                     NUMERIC BY ZEROS.

           EXEC SQL
                SELECT  CPRACI
                     ,  CPGRE
                     ,  CPRUB
                     ,  CPMON
                     ,  CPETAT
                     ,  CPDTOU
                     ,  CPDTMU
                     ,  CPDTAN
                     ,  CPOPRN
                     ,  CPDTDM
                     ,  CPSOLD
                INTO   :CPRACI
                     , :CPGRE
                     , :CPRUB
                     , :CPMON
                     , :CPETAT
                     , :CPDTOU
                     , :CPDTMU
                     , :CPDTAN
                     , :CPOPRN
                     , :CPDTDM
                     , :CPSOLD
                FROM  FDBCPT A
                WHERE A.CPRACI = :WS-RACINE
                 AND  A.CPGRE  = :WS-CPGRE
                 AND  A.CPRUB  = :WS-CPRUB
                 AND  A.CPMON  = :WS-CPMON
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
              SET SIM-EXISTE           TO TRUE
           WHEN SQLCODE-NOTFOUND
              SET NAO-EXISTE           TO TRUE
           WHEN OTHER
              MOVE "FDBCPT "           TO W-OBJECT-NAME
              SET CMD-SELECT           TO TRUE
              PERFORM  P990-ERRO-DB2
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P500-INSERT-AMLJ302.
     š*----------------------------------------------------------------
     š*- Verifica se o Registo Já Existe ( NIF'S SUPLICADOS )
     š*-
           EXEC SQL
                 INSERT INTO AMLJ302
                 VALUES ( :AMLH302N-COMPANY  :AMLH302N-COMPANY-IND
                        , :AMLH302N-ACTNBR
                        , :AMLH302N-ACTTYPE   :AMLH302N-ACTTYPE-IND
                        , :AMLH302N-OFFICER   :AMLH302N-OFFICER-IND
                        , :AMLH302N-DTOPEN    :AMLH302N-DTOPEN-IND
                        , :AMLH302N-DTCLOSE   :AMLH302N-DTCLOSE-IND
                        , :AMLH302N-DTLMOV    :AMLH302N-DTLMOV-IND
                        , :AMLH302N-CDCURR    :AMLH302N-CDCURR-IND
                        , :AMLH302N-BALANCE   :AMLH302N-BALANCE-IND
                        , :AMLH302N-CDCATG    :AMLH302N-CDCATG-IND
                        , :AMLH302N-ACTCUST   :AMLH302N-ACTCUST-IND
                        , :AMLH302N-HLDTYP    :AMLH302N-HLDTYP-IND
                        , :AMLH302N-STATUS    :AMLH302N-STATUS-IND
                        , :AMLH302N-INDBLOCK  :AMLH302N-INDBLOCK-IND
                        , :AMLH302N-DTROPEN   :AMLH302N-DTROPEN-IND
                        , :AMLH302N-DTBLOCK   :AMLH302N-DTBLOCK-IND
                        , :AMLH302N-DTUNBLOCK :AMLH302N-DTUNBLOCK-IND)
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
             CONTINUE
           WHEN OTHER
              MOVE "AMLJ302"          TO W-OBJECT-NAME
              SET CMD-INSERT           TO TRUE
              PERFORM  P990-ERRO-DB2
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P500-SET-NULLS-ALMJ302.
     š*----------------------------------------------------------------

            MOVE ZEROS TO
               AMLH302N-COMPANY-IND
               AMLH302N-ACTNBR-IND
               AMLH302N-ACTTYPE-IND
               AMLH302N-OFFICER-IND
               AMLH302N-DTOPEN-IND
               AMLH302N-DTCLOSE-IND
               AMLH302N-DTLMOV-IND
               AMLH302N-CDCURR-IND
               AMLH302N-BALANCE-IND
               AMLH302N-CDCATG-IND
               AMLH302N-ACTCUST-IND
               AMLH302N-HLDTYP-IND
               AMLH302N-STATUS-IND
               AMLH302N-INDBLOCK-IND
               AMLH302N-DTROPEN-IND
               AMLH302N-DTBLOCK-IND
               AMLH302N-DTUNBLOCK-IND

           IF AMLH302N-COMPANY  EQUAL SPACES
             MOVE -1 TO AMLH302N-COMPANY-IND
           END-IF
           IF AMLH302N-ACTNBR  EQUAL SPACES
             MOVE -1 TO  AMLH302N-ACTNBR-IND
           END-IF
           IF AMLH302N-ACTTYPE EQUAL SPACES
             MOVE -1 TO AMLH302N-ACTTYPE-IND
           END-IF
           IF  AMLH302N-OFFICER EQUAL SPACES
             MOVE -1 TO AMLH302N-OFFICER-IND
           END-IF
           IF  AMLH302N-DTOPEN   EQUAL SPACES
             MOVE -1 TO AMLH302N-DTOPEN-IND
           END-IF
           IF AMLH302N-DTCLOSE   EQUAL SPACES
             MOVE -1 TO AMLH302N-DTCLOSE-IND
           END-IF
           IF AMLH302N-DTLMOV  EQUAL SPACES
             MOVE -1 TO AMLH302N-DTLMOV-IND
           END-IF
           IF AMLH302N-DTLMOV EQUAL SPACES
             MOVE -1 TO AMLH302N-DTLMOV-IND
           END-IF
           IF AMLH302N-CDCURR EQUAL SPACES
             MOVE -1 TO AMLH302N-CDCURR-IND
           END-IF
           IF AMLH302N-CDCATG  EQUAL SPACES
             MOVE -1 TO AMLH302N-CDCATG-IND
           END-IF
           IF AMLH302N-ACTCUST EQUAL SPACES
             MOVE -1 TO AMLH302N-ACTCUST-IND
           END-IF
           IF AMLH302N-STATUS EQUAL SPACES
             MOVE -1 TO AMLH302N-STATUS-IND
           END-IF.
           IF AMLH302N-INDBLOCK EQUAL SPACES
             MOVE -1 TO AMLH302N-INDBLOCK-IND
           END-IF.
           IF AMLH302N-DTROPEN EQUAL SPACES
             MOVE -1 TO AMLH302N-DTROPEN-IND
           END-IF.
           IF AMLH302N-DTBLOCK EQUAL SPACES
             MOVE -1 TO AMLH302N-DTBLOCK-IND
           END-IF.
           IF AMLH302N-DTUNBLOCK   EQUAL SPACES
             MOVE -1 TO AMLH302N-DTUNBLOCK-IND
           END-IF.
     š*-
     š*----------------------------------------------------------------
       P450-VALIDA-DATA.
     š*----------------------------------------------------------------
     š*-
           EXEC SQL
               SET :WS-VAL-DATE  = DATE(:WS-TST-DATE)
           END-EXEC
           EVALUATE SQLCODE
              WHEN +0
                  CONTINUE
              WHEN -180
                  MOVE "          " TO WS-TST-DATE
           END-EVALUATE.

      *- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
       P990-ERRO-DB2.
      *- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *

           MOVE  SQLCODE                 TO  W-SQLCODE

           EVALUATE TRUE
           WHEN SQLCODE-NOTFOUND
                  STRING "ERRO DE DADOS: CHAVE INEXISTENTE NA TABELA <"
                                                  DELIMITED BY SIZE
                         W-OBJECT-NAME            DELIMITED BY SPACE
                         ">"                      DELIMITED BY SIZE
                  INTO MSG-ERRO-SQL
           WHEN SQLCODE-DUPLKEY
                 STRING "ERRO DE DADOS: CHAVE JÁ EXISTENTE NA TABELA <"
                                                  DELIMITED BY SIZE
                        W-OBJECT-NAME             DELIMITED BY SPACE
                        ">"                       DELIMITED BY SIZE
                   INTO MSG-ERRO-SQL
           WHEN SQLCODE-URESOURC
                STRING "ERRO DE SISTEMA: TABELA <"
                                                  DELIMITED BY SIZE
                       W-OBJECT-NAME              DELIMITED BY SPACE
                       "> INDISPONÍVEL. CONTACTE RESPONSÁVEL"
                                                  DELIMITED BY SIZE
                  INTO MSG-ERRO-SQL
           WHEN SQLCODE-DLKTMOUT
               STRING "INFO: TABELA <"            DELIMITED BY SIZE
                      W-OBJECT-NAME               DELIMITED BY SPACE
                      "> MOMENTANEAMENTE INDISPONÍVEL. TENTE DE NOVO"
                                                  DELIMITED BY SIZE
                 INTO MSG-ERRO-SQL
           WHEN OTHER
               STRING "ERRO: OBJECTO <"           DELIMITED BY SIZE
                      W-OBJECT-NAME               DELIMITED BY SPACE
                      ">, FUNCAO <"               DELIMITED BY SIZE
                      W-CMDEXEC                   DELIMITED BY SPACE
                      ">, C/ SQLCODE <"
                      W-EDTSQLC
                      ">."                        DELIMITED BY SIZE
                      INTO MSG-ERRO-SQL
           END-EVALUATE.
     š*
           INITIALIZE   AMLT900A
           MOVE MSG-ERRO-SQL    TO ERRMSG   OF  AMLT900A
           MOVE W-SQLCODE       TO ERRCOD   OF  AMLT900A
           MOVE "SQL"           TO ERRAPL   OF  AMLT900A
           MOVE W-OBJECT-NAME   TO ERROBJ   OF  AMLT900A
           MOVE  2              TO ERRRTC   OF  AMLT900A
           SET AMLB302-MSGSGBD TO TRUE
           MOVE W-OBJECT-NAME   TO AMLB302-IDPARERR
           MOVE W-SQLCODE       TO AMLB302-CODERR
           MOVE MSG-ERRO-SQL    TO AMLB302-DESCERR

           PERFORM    P995-INSERT-ERROS.
      *- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
       P995-INSERT-ERROS.
      *- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *

           MOVE   "AMLS302"      TO  ERRPRG OF AMLT900A.
           MOVE     WS-RACINE      TO  RACINE OF AMLT900A.

           EXEC SQL  INSERT
                INTO AMLT900A
                VALUES  (
                           :AMLT900A.RACINE
                         , :AMLT900A.REFOPE
                         , CURRENT TIMESTAMP
                         , :AMLT900A.ERRRTC
                         , :AMLT900A.ERRCOD
                         , :AMLT900A.ERRMSG
                         , :AMLT900A.ERRPRG
                         , :AMLT900A.ERRAPL
                         , :AMLT900A.ERROBJ
                         , :AMLT900A.ERRFLD
                         , :AMLT900A.ERRCMD
                         , :AMLT900A.ERRKEY1
                         , :AMLT900A.ERRVAL1
                         , :AMLT900A.ERRKEY2
                         , :AMLT900A.ERRVAL2 )
           END-EXEC.

     š*-
           MOVE SQLCODE          TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
              ADD      1            TO  NR-ERR
           WHEN OTHER
              MOVE "INSERT-T900A"   TO W-OBJECT-NAME
              SET  CMD-INSERT       TO TRUE
              STRING "ERRO DE DADOS AO INSERIR ERRO  NA TABELA <"
                                                  DELIMITED BY SIZE
                        W-OBJECT-NAME             DELIMITED BY SPACE
                        ">"                       DELIMITED BY SIZE
                        W-SQLCODE                 DELIMITED BY SPACE
                        ">"                       DELIMITED BY SIZE
                   INTO MSG-ERRO-SQL
              DISPLAY MSG-ERRO-SQL
           END-EVALUATE.

     š*****************************************************************
       P999-FIMPGM.
     š*****************************************************************
           GOBACK.
      *- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
      *    FIM DO PROGRAMA AMLS302
      *- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
