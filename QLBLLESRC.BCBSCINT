       IDENTIFICATION DIVISION.
      *================================================================*
       PROGRAM-ID.    BCBSCINT   INITIAL.
       AUTHOR.        PEDRO GARCIA
       INSTALLATION.  BBI SA.
       DATE-WRITTEN.  2017-JUL-06.
     š*----------------------------------------------------------------*
     š*   APLICACO .......: BCB - Centralização de Responsabilidades   *
     š*   OBJECTIVO ......: Este Interface destina-se a Extrair Info   *
     š*                     A Enviar BP Intervenientes                 *
     š*   ANALISTA .......: PEDRO GARCIA                               *
     š*   PROGRAMADOR.....:                                            *
     š*================================================================*
       ENVIRONMENT DIVISION.
      *================================================================*
      *----------------------------------------------------------------*
       CONFIGURATION SECTION.
      *----------------------------------------------------------------*
       SOURCE-COMPUTER.    IBM-AS400.
       OBJECT-COMPUTER.    IBM-AS400.
       SPECIAL-NAMES.   DECIMAL-POINT IS COMMA.
      *----------------------------------------------------------------*
       INPUT-OUTPUT SECTION.
      *----------------------------------------------------------------*
      *================================================================*
       DATA DIVISION.
      *================================================================*
       FILE SECTION.
      *----------------------------------------------------------------*
      *----------------------------------------------------------------*
       WORKING-STORAGE SECTION.
      *-----------------------------------------------------------------
      *
       01 EXISTE-INFO                PIC 9(01).
          88 SIM-EXISTE              VALUE 1.
          88 NAO-EXISTE              VALUE 0.
      *
       01 EXISTE-NIF                 PIC 9(01).
          88 SIM-NIF-EXIST           VALUE 1.
          88 NAO-NIF-EXIST           VALUE 0.
      *
       01 ENVIADA-INFO               PIC 9(01).
          88 SIM-ENVIADA             VALUE 1.
          88 NAO-ENVIADA             VALUE 0.
      *
       01 EXISTE-ALTER               PIC 9(01).
          88 SIM-ALTER               VALUE 1.
          88 NAO-ALTER               VALUE 0.
      *
       01 TRATA-INFO                 PIC 9(01).
          88 SIM-TRATA               VALUE 1.
          88 NAO-TRATA               VALUE 0.
      *
       01 NR-ERR                     PIC 9(06) VALUE ZEROS.

       01 W-DATA-SYS                 PIC 9(08).
       01 W-DATA-SYS-R REDEFINES W-DATA-SYS.
          05 W-DATA-SYS-SC           PIC 9(02).
          05 W-DATA-SYS-AAMMDD       PIC 9(06).

       01 W-DATA-EDITADA             PIC X(10) VALUE ZEROS.
       01 W-DATA-R2 REDEFINES W-DATA-EDITADA.
          05 WS-ANOIN                PIC X(04).
          05 W-DATA-SEP1             PIC X(01).
          05 WS-MESIN                PIC X(02).
          05 W-DATA-SEP2             PIC X(01).
          05 WS-DIAIN                PIC X(02).
     š*
       01 WS-DATA-CONVER.
          03 WS-ANOIN                PIC X(04).
          03 FILLER                  PIC X VALUE "-".
          03 WS-MESIN                PIC X(02).
          03 FILLER                  PIC X VALUE "-".
          03 WS-DIAIN                PIC X(02).
     š*
       01 WX-DATA-CONVER.
          03 WS-ANOIN                PIC X(04).
          03 WS-MESIN                PIC X(02).
          03 WS-DIAIN                PIC X(02).
       01 WR-DATA-CONVER  REDEFINES  WX-DATA-CONVER     PIC X(8).
     š*
       01 WX-ANO-CONVER.
          03 WS-ANO-12               PIC X(02).
          03 WS-ANO-34               PIC X(02).

       01  W-CONSTANTS.
           05  K-APLICACAO           PIC X(3)    VALUE "BCB".
           05  K-PROGRAMA            PIC X(8)    VALUE "BCBSCINT".

       01 WS-STRING.
          05 WS-STRING-CHR           PIC X       OCCURS 300.
     š* Determina Comprimento de uma String
       01 WS-POS-I                   PIC S9(4)   COMP   VALUE 0.
       01 WS-POS-MORADA              PIC S9(4)   COMP   VALUE 0.
       01 WS-STRING-L                PIC S9(4)   COMP   VALUE 0.
       01 W-NUM                      PIC 9(3).
     š* Indice para Pesquisa de String
       01 S-CHAR-L                   PIC S9(4)   COMP.
       01 S-CHAR-V                   PIC X(50).
       01 W-CHAR.
          03 W-NOMECHR               PIC X       OCCURS 50.
     š* Tratamento de Nome Completo
       01 WS-POS-NOMI                PIC S9(4)   COMP   VALUE 0.
       01 WS-POS-NOMIS               PIC S9(4)   COMP   VALUE 0.
       01 WS-NOM-L                   PIC S9(4)   COMP   VALUE 0.
       01 WS-NOM.
          03 W-NOM                   PIC X       OCCURS 35.
       01 WS-POS-PRNMI               PIC S9(4)   COMP   VALUE 0.
       01 WS-POS-PRNMIS              PIC S9(4)   COMP   VALUE 0.
       01 WS-PRNM-L                  PIC S9(4)   COMP   VALUE 0.
       01 WS-PRNM.
          03 W-PRNM                  PIC X       OCCURS 35.
       01 WS-NOM-COMPLETO            PIC X(80).

      *----------------------------------------------------------------*
      * AREAS LIGACAO C/ SUB-ROTINAS
      *----------------------------------------------------------------*
      *----------------------------------------------------------------*
      *    DECLARACOES P/ INTERFACE C/ DB2
      *----------------------------------------------------------------*
           EXEC SQL BEGIN DECLARE SECTION END-EXEC.

           EXEC SQL
                INCLUDE SQLCA
           END-EXEC.

      * COPY BOOK DO MODULO DE ERROS
           EXEC SQL INCLUDE CPYW999 END-EXEC.

       01  WS-TMS-NULA     PIC  X(26)
                           VALUE "0001-01-01-00.00.00.000000".
       01  WS-DATA-DIA.
           03  WS-ANOIN-DIA         PIC 9(04).
           03  FILLER               PIC X VALUE "-".
           03  WS-MESIN-DIA         PIC 9(02).
           03  FILLER               PIC X VALUE "-".
           03  WS-DIAIN-DIA         PIC 9(02).

       01  WS-DATA-PROC.
           03  WS-ANO-PROC          PIC 9(04).
           03  FILLER               PIC X VALUE "-".
           03  WS-MES-PROC          PIC 9(02).
           03  FILLER               PIC X VALUE "-".
           03  WS-DIA-PROC          PIC 9(02).

       01 WS-VERSAO        PIC X(03).
       01 WS-TST-DATE      PIC X(10).
       01 WS-VAL-DATE      PIC X(10).
       01 WS-DUMMY         PIC S9(1)       VALUE  ZERO.

     š* Copy : Tabela de Intervenientes Nova
           EXEC SQL
               INCLUDE BCBHCINTN
           END-EXEC.

     š* Copy : Tabela de Intervenientes Antiga
           EXEC SQL
               INCLUDE BCBHCINTO
           END-EXEC.

     š* Copy : Tabela de Saldos de Conta
       01  R-FDBCLI.
           COPY DDS-ALL-FORMATS OF FDBCLI.

     š* Copy : Tabela de Moradas
       01  R-FDBADR.
           COPY DDS-ALL-FORMATS OF FDBADR.
     š* Copy : Tabela de Other Numbering
       01  R-FDBNUM.
           COPY DDS-ALL-FORMATS OF FDBNUM.

     š* Copy : Tabela de KYCT900A
       01  R-KYCT900A.
           COPY DDS-ALL-FORMATS OF KYCT900A.

       01 WS-RACINE                PIC X(07).
       01 WS-NUREFE-022-NIF        PIC X(50).
       01 WS-TBCOMP                PIC X(73).
     š* BI
       01 WS-NUREFE-021-BI         PIC X(50).
       01 WS-BI-L                  PIC S9(4)       COMP.
       01 WS-BI-I                  PIC S9(4)       COMP.
       01 WS-BI.
          03 WS-BI-CHR             PIC X           OCCURS 50.
       01 WS-BI-FINAL              PIC X(14).
     š* Passaporte
       01 WS-NUREFE-025-PS         PIC X(50).
     š* Outro Documento
       01 WS-NUREFE-026-OD         PIC X(50).
     š* Pais de Emissao do Documento
       01 WS-NUREFE-074-PE         PIC X(50).
       01 WS-PAIS-ALFA             PIC X(03).
       01 WS-PAIS-ISO              PIC X(03).
     š* W- Moradas
       01 WS-NUREFE-959-INDMORF    PIC X(50).
     š* W- Morada Base
       01 WS-000-MORB-ADLI01       PIC X(35).
       01 WS-000-MORB-ADLI02       PIC X(35).
       01 WS-000-MORB-ADLI03       PIC X(35).
       01 WS-000-MORB-ADLI04       PIC X(35).
       01 WS-000-MORB-ADLI05       PIC X(35).
       01 WS-000-MORB-ADLI06       PIC X(35).
     š* W- Morada Fiscal
       01 WS-900-MORF-ADLI01       PIC X(35).
       01 WS-900-MORF-ADLI02       PIC X(35).
       01 WS-900-MORF-ADLI03       PIC X(35).
       01 WS-900-MORF-ADLI04       PIC X(35).
       01 WS-900-MORF-ADLI05       PIC X(35).
       01 WS-900-MORF-ADLI06       PIC X(35).
     š* W- Morada Correspondencia
       01 WS-001-MORC-ADLI01       PIC X(35).
       01 WS-001-MORC-ADLI02       PIC X(35).
       01 WS-001-MORC-ADLI03       PIC X(35).
       01 WS-001-MORC-ADLI04       PIC X(35).
       01 WS-001-MORC-ADLI05       PIC X(35).
       01 WS-001-MORC-ADLI06       PIC X(35).

           EXEC SQL END  DECLARE SECTION END-EXEC.
      *----------------------------------------------------------------*
       LINKAGE SECTION.
      *----------------------------------------------------------------*
           COPY BCBBCINT.
      *================================================================*
       PROCEDURE DIVISION USING BCBBCINT-LKPARMS.
      *================================================================*
       P000-INICIO.
           EXEC SQL
                 WHENEVER  SQLERROR  CONTINUE
           END-EXEC.
           PERFORM P001-INICIO
           PERFORM P300-GET-FDBCLI
           PERFORM P400-ANALISA-CLIENTE

           IF NAO-EXISTE  OR NAO-TRATA
             PERFORM P999-FIMPGM
           END-IF
           IF SIM-EXISTE
               PERFORM P400-MOVE-BCBJCINT
               IF NEWCINT-NIFNIPC NOT EQUAL SPACES
                 PERFORM P500-TESTA-BCBJCINT-NIF
               END-IF
               PERFORM P500-TESTA-BCBJCINT
             END-IF

           IF BCBBCINT-PROC-OK AND NAO-NIF-EXIST
             PERFORM P500-TRATA-BCBJCINT
           END-IF.

           PERFORM P999-FIMPGM.
     š*---------------------------------------------------------------------
       P001-INICIO.
     š*---------------------------------------------------------------------
           INITIALIZE  NEWCINT-REC
                    ,  OLDCINT-REC
                       REPLACING ALPHANUMERIC BY SPACES
                                     NUMERIC BY ZEROS.
           EXEC SQL SET :S-SYSTMST = CURRENT TIMESTAMP END-EXEC.
           MOVE S-SYSTMST(1:10) TO WS-DATA-DIA.
           MOVE ZERO TO EXISTE-ALTER.
           MOVE  BCBBCINT-RACINE  TO WS-RACINE.
           MOVE  BCBBCINT-VERSAO  TO WS-VERSAO.
           MOVE  BCBBCINT-DTPROC  TO WS-DATA-PROC.
     š*-
     š*----------------------------------------------------------------
       P300-GET-FDBCLI.
     š*----------------------------------------------------------------
     š*-
           INITIALIZE  R-FDBCLI
                       REPLACING ALPHANUMERIC BY SPACES
                                     NUMERIC BY ZEROS.
     š*- Obtem Informação Mestre de Saldos
           MOVE  BCBBCINT-RACINE  TO WS-RACINE

           EXEC SQL
                SELECT  CLRACI
                     ,  CLETAT
                     ,  CLDTOU
                     ,  CLDTMU
                     ,  CLDTAN
                     ,  CLNBRM
                     ,  CLOPRN
                     ,  CLGRPE
                     ,  CLAGNT
                     ,  CLCENT
                     ,  CLGERA
                     ,  CLETCV
                     ,  CLNOM
                     ,  CLPRNM
                     ,  CLORIG
                     ,  CLTYPE
                     ,  CLNOMC
                     ,  CLDTNA
                     ,  CLDTDC
                     ,  CLSRCD
                     ,  CLLNGE
                     ,  CLCDEX
                     ,  CLDESI
                     ,  CLAD01
                     ,  CLAD02
                     ,  CLAD03
                     ,  CLAD04
                     ,  CLAD05
                     ,  CLAD06
                     ,  CLDOMI
                     ,  CLREGI
                     ,  CLNATI
                     ,  CLACTI
                     ,  CLSECT
                     ,  CLRGMA
                     ,  CLSYMP
                     ,  CLMONE
                     ,  CLMONP
                     ,  CLTLPH
                     ,  CLTLEX
                     ,  CLTLFX
                     ,  CLSWFT
                     ,  CLSIC
                     ,  CLAUTR
                     ,  CLGIRO
                     ,  CLPROF
                     ,  CLGEST
                     ,  CLOBJE
                     ,  CLGRPG
                     ,  CLGER2
                     ,  CLGER3
                     ,  CLNACP
                     ,  CLDOMR
                INTO   :CLRACI
                     , :CLETAT
                     , :CLDTOU
                     , :CLDTMU
                     , :CLDTAN
                     , :CLNBRM
                     , :CLOPRN
                     , :CLGRPE
                     , :CLAGNT
                     , :CLCENT
                     , :CLGERA
                     , :CLETCV
                     , :CLNOM
                     , :CLPRNM
                     , :CLORIG
                     , :CLTYPE
                     , :CLNOMC
                     , :CLDTNA
                     , :CLDTDC
                     , :CLSRCD
                     , :CLLNGE
                     , :CLCDEX
                     , :CLDESI
                     , :CLAD01
                     , :CLAD02
                     , :CLAD03
                     , :CLAD04
                     , :CLAD05
                     , :CLAD06
                     , :CLDOMI
                     , :CLREGI
                     , :CLNATI
                     , :CLACTI
                     , :CLSECT
                     , :CLRGMA
                     , :CLSYMP
                     , :CLMONE
                     , :CLMONP
                     , :CLTLPH
                     , :CLTLEX
                     , :CLTLFX
                     , :CLSWFT
                     , :CLSIC
                     , :CLAUTR
                     , :CLGIRO
                     , :CLPROF
                     , :CLGEST
                     , :CLOBJE
                     , :CLGRPG
                     , :CLGER2
                     , :CLGER3
                     , :CLNACP
                     , :CLDOMR
                FROM  FDBCLI A
                WHERE A.CLRACI = :WS-RACINE
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
              SET SIM-EXISTE           TO TRUE
           WHEN SQLCODE-NOTFOUND
              SET NAO-EXISTE           TO TRUE
           WHEN OTHER
              MOVE "FDBCLI "           TO W-OBJECT-NAME
              SET CMD-SELECT           TO TRUE
              PERFORM  P990-ERRO-DB2
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P400-ANALISA-CLIENTE.
     š*----------------------------------------------------------------
     š*-
           SET NAO-TRATA           TO TRUE

           IF CLTYPE  OF R-FDBCLI  = "S"
                              OR   = "B"
                              OR   = "U"
             SET SIM-TRATA        TO TRUE
           END-IF
           IF CLTYPE  OF R-FDBCLI  = "P"
                               OR  = "L"
                               OR  = "E"
             SET SIM-TRATA        TO TRUE
           END-IF.
     š*-
     š*----------------------------------------------------------------
       P400-MOVE-BCBJCINT.
     š*----------------------------------------------------------------
     š*- INFTYPE   INS - Inserção
     š*-           UPD - Actualização
     š*-           DEL - Eliminação ( engano de reportes anterior )
     š*- BPENV - E- Para Enviar
     š*- ANO MES - Data de Referencia
           MOVE  WS-ANO-PROC         TO NEWCINT-ANO
           MOVE  WS-MES-PROC         TO NEWCINT-MES
           MOVE  WS-VERSAO           TO NEWCINT-VERSAO
     š*- TIPOCLI 1-Singular / 2- Colectivo / 3- Sector Finan
           EVALUATE TRUE
           WHEN  CLTYPE OF R-FDBCLI  = "A"
              MOVE "2"        TO    NEWCINT-TIPOCLI
           WHEN  CLTYPE OF R-FDBCLI  = "B"
              MOVE "2"        TO    NEWCINT-TIPOCLI
           WHEN  CLTYPE OF R-FDBCLI  = "S"
              MOVE "2"        TO    NEWCINT-TIPOCLI
           WHEN  CLTYPE OF R-FDBCLI  = "U"
              MOVE "2"        TO    NEWCINT-TIPOCLI
           WHEN  CLTYPE OF R-FDBCLI  = "Q"
              MOVE "2"        TO    NEWCINT-TIPOCLI
           WHEN  CLTYPE OF R-FDBCLI  = "P"
              MOVE "1"        TO    NEWCINT-TIPOCLI
           WHEN  CLTYPE OF R-FDBCLI  = "L"
              MOVE "1"        TO    NEWCINT-TIPOCLI
           WHEN  CLTYPE OF R-FDBCLI  = "E"
              MOVE "1"        TO    NEWCINT-TIPOCLI
           WHEN  OTHER
              MOVE "3"        TO    NEWCINT-TIPOCLI
           END-EVALUATE
     š*- DTNASC
           MOVE "0001-01-01" TO NEWCINT-DTNASC
           IF   CLDTNA OF R-FDBCLI NOT EQUAL TO "000000"
            AND CLDTNA OF R-FDBCLI NOT EQUAL TO " "
            MOVE CLDTNA OF R-FDBCLI(1:2) TO WS-DIAIN  OF WX-DATA-CONVER
            MOVE CLDTNA OF R-FDBCLI(3:2) TO WS-MESIN  OF WX-DATA-CONVER
            MOVE CLDTNA OF R-FDBCLI(5:4) TO WS-ANOIN  OF WX-DATA-CONVER
            MOVE CORR  WX-DATA-CONVER    TO WS-DATA-CONVER
            MOVE WS-DATA-CONVER          TO NEWCINT-DTNASC
           END-IF
           PERFORM P450-VALIDA-DTNASC
     š*- NIFNIPC
           PERFORM P300-GET-DOC-NIF
           MOVE WS-NUREFE-022-NIF   TO  NEWCINT-NIFNIPC
     š*- REFORIG
           MOVE  CLRACI  OF R-FDBCLI TO NEWCINT-REFORIG
     š*- NOME
           PERFORM P300-GET-NOME
      *    MOVE  CLNOMC  OF R-FDBCLI TO NEWCINT-NOME
           MOVE  WS-NOM-COMPLETO     TO NEWCINT-NOME
     š*- MORADA1
           PERFORM P300-GET-IND-MOR-FISCAL.
           PERFORM P300-GET-MOR-BASE.
           PERFORM P300-GET-MOR-FISCAL.
           PERFORM P300-GET-MOR-CORR.
           IF WS-NUREFE-959-INDMORF(1:1) = "N" OR
              WS-NUREFE-959-INDMORF(1:1) = "n"
              PERFORM P300-MOVE-FISCAL-MORADA1
           ELSE
              PERFORM P300-MOVE-BASE-MORADA1
           END-IF
     š*- MORADA2
           IF WS-NUREFE-959-INDMORF(1:1) = "N" OR
              WS-NUREFE-959-INDMORF(1:1) = "n"
              PERFORM P300-MOVE-BASE-MORADA2
           ELSE
              PERFORM P300-MOVE-CORR-MORADA2
           END-IF
     š*- NACIONALIDADE CLNATI
     š*-  Converte de ISO em Alfa
           MOVE CLNATI OF R-FDBCLI  TO  WS-PAIS-ISO
           PERFORM P300-CONV-COD-PAIS
           MOVE WS-PAIS-ALFA       TO  NEWCINT-NACIONALIDADE
     š*- BINICCC  Bilhete Identidade , cartao de cidadao
     š*- Bilhete de Identidade
           PERFORM P300-GET-DOC-BI.
           IF WS-BI-FINAL      NOT EQUAL SPACES
              MOVE WS-BI-FINAL       TO NEWCINT-BINICCC
           END-IF
     š*- Passaporte
           PERFORM P300-GET-DOC-PAS.
     š*- Outro Documento
           PERFORM P300-GET-DOC-OUT.
           PERFORM P300-GET-DOC-PAIS-EMIT.
     š*-  Converte de ISO em Alfa
           MOVE WS-NUREFE-074-PE    TO  WS-PAIS-ISO
           PERFORM P300-CONV-COD-PAIS
     š*- Data de Emissão - A ler no 936
     š*- Entidade Emissora / Pais Emissao
     š*- TIPODOC     Outro Documento
     š*- NUMERO      Outro Documento
     š*- DATAEMI     Outro Documento
     š*- ENTEMITENTE Outro Documento
     š*- PAIS        Outro Documento
           IF WS-NUREFE-025-PS NOT EQUAL SPACES
              MOVE WS-NUREFE-025-PS  TO NEWCINT-NUMERO
              MOVE "302"             TO NEWCINT-TIPODOC
              MOVE WS-PAIS-ALFA      TO  NEWCINT-PAIS
           END-IF

     š*- Audit Log
           EXEC SQL SET :S-SYSTMST = CURRENT TIMESTAMP       END-EXEC.
           MOVE S-SYSTMST         TO NEWCINT-TMSCRIA.
           MOVE "BCBSCINT"        TO NEWCINT-USERCRIA.
     š*-
     š*----------------------------------------------------------------
       P300-CONV-COD-PAIS.
     š*----------------------------------------------------------------
     š*- Descodifica Codigo ISO de pais em Alfa
     š*-
           EXEC SQL
              SELECT FDBTAB.TBCOMP
                 INTO :WS-TBCOMP
                 FROM FDBTAB
                 WHERE TBID  = "020"
                 AND  TBCODE = :WS-PAIS-ISO
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
             MOVE WS-TBCOMP(71:3)    TO  WS-PAIS-ALFA
           WHEN OTHER
             MOVE "PRT"              TO  WS-PAIS-ALFA
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P300-GET-DOC-BI.
     š*----------------------------------------------------------------
     š*-
           MOVE ZEROS TO WS-BI-L
                      ,  WS-BI-I.
           MOVE SPACES TO WS-BI WS-BI-FINAL.

           EXEC SQL
                 SELECT FDBNUM.NUREFE
                  INTO :WS-NUREFE-021-BI
                  FROM  FDBNUM
                  WHERE FDBNUM.NURACI = :WS-RACINE
                   AND  FDBNUM.NUETAT = " "
                   AND  FDBNUM.NUTYPE = "021"
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
             MOVE WS-NUREFE-021-BI TO WS-BI
             PERFORM

             VARYING WS-BI-L FROM LENGTH OF WS-BI BY -1
                UNTIL WS-BI-CHR(WS-BI-L) > SPACES
                OR WS-BI-L             = ZERO
                  CONTINUE
             END-PERFORM

     š*- Retira Espaços à Direita
             MOVE ZERO TO WS-BI-I
             IF WS-BI-I >= 0
               COMPUTE  WS-BI-I = WS-BI-I + 1
               MOVE WS-BI(WS-BI-I: WS-BI-L) TO WS-BI-FINAL
     š*- Tem de ter as 8 Primeiras Posições Numericas
     š*- A primeira posição tem de ser zero
               IF WS-BI-FINAL(1:8) IS NOT NUMERIC OR
                  WS-BI-FINAL(1:1)  NOT EQUAL "0"  OR
                  WS-BI-FINAL(9:1)  NOT EQUAL " "  OR
                  WS-BI-FINAL(10:1) IS NOT NUMERIC OR
                  WS-BI-FINAL(11:1) NOT EQUAL " "
                  MOVE SPACES TO WS-BI-FINAL
               END-IF
             ELSE
              MOVE SPACES TO WS-BI-FINAL
             END-IF
           WHEN OTHER
             MOVE SPACES TO WS-NUREFE-021-BI
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P300-GET-DOC-PAS.
     š*----------------------------------------------------------------
     š*-
           EXEC SQL
                 SELECT FDBNUM.NUREFE
                  INTO :WS-NUREFE-025-PS
                  FROM  FDBNUM
                  WHERE FDBNUM.NURACI = :WS-RACINE
                   AND  FDBNUM.NUETAT = " "
                   AND  FDBNUM.NUTYPE = "025"
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.
           EVALUATE TRUE
           WHEN SQLCODE-OK
             CONTINUE
           WHEN OTHER
             MOVE SPACES TO WS-NUREFE-025-PS
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P300-GET-DOC-OUT.
     š*----------------------------------------------------------------
     š*-
           EXEC SQL
                 SELECT FDBNUM.NUREFE
                  INTO :WS-NUREFE-026-OD
                  FROM  FDBNUM
                  WHERE FDBNUM.NURACI = :WS-RACINE
                   AND  FDBNUM.NUETAT = " "
                   AND  FDBNUM.NUTYPE = "026"
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.
           EVALUATE TRUE
           WHEN SQLCODE-OK
             CONTINUE
           WHEN OTHER
             MOVE SPACES TO WS-NUREFE-026-OD
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P300-GET-DOC-PAIS-EMIT.
     š*----------------------------------------------------------------
     š*-
           EXEC SQL
                 SELECT FDBNUM.NUREFE
                  INTO :WS-NUREFE-074-PE
                  FROM  FDBNUM
                  WHERE FDBNUM.NURACI = :WS-RACINE
                   AND  FDBNUM.NUETAT = " "
                   AND  FDBNUM.NUTYPE = "074"
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.
           EVALUATE TRUE
           WHEN SQLCODE-OK
             CONTINUE
           WHEN OTHER
             MOVE SPACES TO WS-NUREFE-074-PE
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P300-GET-DOC-NIF.
     š*----------------------------------------------------------------
     š*-
           EXEC SQL
                 SELECT FDBNUM.NUREFE
                  INTO :WS-NUREFE-022-NIF
                  FROM  FDBNUM
                  WHERE FDBNUM.NURACI = :WS-RACINE
                   AND  FDBNUM.NUETAT = " "
                   AND  FDBNUM.NUTYPE = "022"
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.
           EVALUATE TRUE
           WHEN SQLCODE-OK
     š*-Testa 9 Caracteres
             MOVE WS-NUREFE-022-NIF TO WS-BI
             IF WS-BI NOT EQUAL SPACES
               PERFORM
               VARYING WS-BI-L FROM LENGTH OF WS-BI BY -1
                  UNTIL WS-BI-CHR(WS-BI-L) > SPACES
                  OR WS-BI-L             = ZERO
                    CONTINUE
               END-PERFORM
               IF WS-BI-L <=8
               MOVE SPACES TO WS-NUREFE-022-NIF
               END-IF
             END-IF
     š*-Testa Primeiro Caracter
             IF WS-NUREFE-022-NIF(1:1) = "0"
               MOVE SPACES TO WS-NUREFE-022-NIF
             END-IF
           WHEN OTHER
             MOVE SPACES TO WS-NUREFE-022-NIF
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P300-GET-MOR-BASE.
     š*----------------------------------------------------------------
     š*-

           MOVE CLAD01 OF R-FDBCLI  TO WS-000-MORB-ADLI01
           MOVE CLAD02 OF R-FDBCLI  TO WS-000-MORB-ADLI02
           MOVE CLAD03 OF R-FDBCLI  TO WS-000-MORB-ADLI03
           MOVE CLAD04 OF R-FDBCLI  TO WS-000-MORB-ADLI04
           MOVE CLAD05 OF R-FDBCLI  TO WS-000-MORB-ADLI05
           MOVE CLAD06 OF R-FDBCLI  TO WS-000-MORB-ADLI06.
     š*-
     š*----------------------------------------------------------------
       P300-GET-IND-MOR-FISCAL.
     š*----------------------------------------------------------------
     š*-
           EXEC SQL
                 SELECT FDBNUM.NUREFE
                  INTO :WS-NUREFE-959-INDMORF
                  FROM  FDBNUM
                  WHERE FDBNUM.NURACI = :WS-RACINE
                   AND  FDBNUM.NUETAT = " "
                   AND  FDBNUM.NUTYPE = "959"
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.
           EVALUATE TRUE
           WHEN SQLCODE-OK
             CONTINUE
           WHEN OTHER
             MOVE SPACES TO WS-NUREFE-959-INDMORF
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P300-GET-MOR-CORR.
     š*----------------------------------------------------------------
     š*-
           EXEC SQL
                 SELECT ADLI01
                      , ADLI02
                      , ADLI03
                      , ADLI04
                      , ADLI05
                      , ADLI06
                 INTO
                       :WS-001-MORC-ADLI01
                      ,:WS-001-MORC-ADLI02
                      ,:WS-001-MORC-ADLI03
                      ,:WS-001-MORC-ADLI04
                      ,:WS-001-MORC-ADLI05
                      ,:WS-001-MORC-ADLI06
                 FROM FDBADR
                 WHERE FDBADR.ADRACI = :WS-RACINE
                  AND  ADNO="001"
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.
           EVALUATE TRUE
           WHEN SQLCODE-OK
             CONTINUE
           WHEN OTHER
             MOVE SPACES TO WS-001-MORC-ADLI01
                            WS-001-MORC-ADLI02
                            WS-001-MORC-ADLI03
                            WS-001-MORC-ADLI04
                            WS-001-MORC-ADLI05
                            WS-001-MORC-ADLI06
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P300-GET-MOR-FISCAL.
     š*----------------------------------------------------------------
     š*-
           EXEC SQL
                 SELECT ADLI01
                      , ADLI02
                      , ADLI03
                      , ADLI04
                      , ADLI05
                      , ADLI06
                 INTO
                       :WS-900-MORF-ADLI01
                      ,:WS-900-MORF-ADLI02
                      ,:WS-900-MORF-ADLI03
                      ,:WS-900-MORF-ADLI04
                      ,:WS-900-MORF-ADLI05
                      ,:WS-900-MORF-ADLI06
                 FROM FDBADR
                 WHERE FDBADR.ADRACI = :WS-RACINE
                  AND  ADNO="900"
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.
           EVALUATE TRUE
           WHEN SQLCODE-OK
             CONTINUE
           WHEN OTHER
             MOVE SPACES TO WS-900-MORF-ADLI01
                            WS-900-MORF-ADLI02
                            WS-900-MORF-ADLI03
                            WS-900-MORF-ADLI04
                            WS-900-MORF-ADLI05
                            WS-900-MORF-ADLI06
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P300-GET-NOME.
     š*----------------------------------------------------------------
     š*-
           MOVE ZEROS TO WS-POS-NOMI WS-POS-PRNMI WS-POS-PRNMIS
                         WS-POS-NOMIS

     š*- NOME PROPRIO
           MOVE  CLPRNM    OF R-FDBCLI   TO WS-PRNM
           INSPECT  WS-PRNM
                   TALLYING WS-POS-PRNMIS   FOR LEADING SPACE.

           INSPECT FUNCTION REVERSE(WS-PRNM)
                   TALLYING WS-POS-PRNMI    FOR LEADING SPACE.

           COMPUTE  WS-PRNM-L   = LENGTH OF WS-PRNM - WS-POS-PRNMI.
           COMPUTE  WS-PRNM-L   = WS-PRNM-L - WS-POS-PRNMIS

           IF LENGTH OF WS-PRNM = WS-POS-PRNMIS
              COMPUTE WS-POS-PRNMIS = 0
           END-IF
           IF WS-POS-PRNMIS = 0
             ADD 1 TO WS-POS-PRNMIS
           END-IF

     š*-APELIDO
           MOVE  CLNOM     OF R-FDBCLI   TO WS-NOM
           INSPECT WS-NOM
                   TALLYING WS-POS-NOMIS    FOR LEADING SPACE.
           INSPECT FUNCTION REVERSE(WS-NOM)
                   TALLYING WS-POS-NOMI     FOR LEADING SPACE.

           COMPUTE  WS-NOM-L    = LENGTH OF WS-NOM  -  WS-POS-NOMI.
           COMPUTE  WS-NOM-L    = WS-NOM-L    - WS-POS-NOMIS

           IF LENGTH OF WS-NOM  = WS-POS-NOMIS
              COMPUTE WS-POS-NOMIS   = 0
           END-IF
           IF WS-POS-NOMIS  = 0
             ADD 1 TO WS-POS-NOMIS
           END-IF

     š*-CONSTROI NOME
           MOVE SPACES                    TO WS-NOM-COMPLETO
           IF WS-PRNM-L > 0
             MOVE WS-PRNM(WS-POS-PRNMIS: WS-PRNM-L)
                                          TO WS-NOM-COMPLETO
           END-IF
           IF WS-NOM-L  > 0
             IF WS-PRNM-L > 0
               ADD 2 TO WS-PRNM-L
               MOVE WS-NOM(WS-POS-NOMIS: WS-NOM-L)
                            TO WS-NOM-COMPLETO(WS-PRNM-L:WS-NOM-L)
             ELSE
               MOVE WS-NOM(WS-POS-NOMIS: WS-NOM-L)
                            TO WS-NOM-COMPLETO(WS-POS-NOMIS:WS-NOM-L)
           END-IF.
     š*-
     š*----------------------------------------------------------------
       P300-MOVE-FISCAL-MORADA1.
     š*----------------------------------------------------------------
     š*-
           MOVE 1 TO WS-POS-MORADA
           IF WS-900-MORF-ADLI01 NOT = " "
             MOVE WS-900-MORF-ADLI01 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-900-MORF-ADLI02 NOT = " "
             MOVE WS-900-MORF-ADLI02 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-900-MORF-ADLI03 NOT = " "
             MOVE WS-900-MORF-ADLI03 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-900-MORF-ADLI04 NOT = " "
             MOVE WS-900-MORF-ADLI04 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-900-MORF-ADLI05 NOT = " "
             MOVE WS-900-MORF-ADLI05 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-900-MORF-ADLI06 NOT = " "
             MOVE WS-900-MORF-ADLI06 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.
     š*-
     š*----------------------------------------------------------------
       P300-MOVE-BASE-MORADA1.
     š*----------------------------------------------------------------
     š*-
           MOVE 1 TO WS-POS-MORADA
           IF WS-000-MORB-ADLI01 NOT = " "
             MOVE WS-000-MORB-ADLI01 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-000-MORB-ADLI02 NOT = " "
             MOVE WS-000-MORB-ADLI02 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-000-MORB-ADLI03 NOT = " "
             MOVE WS-000-MORB-ADLI03 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-000-MORB-ADLI04 NOT = " "
             MOVE WS-000-MORB-ADLI04 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-000-MORB-ADLI05 NOT = " "
             MOVE WS-000-MORB-ADLI05 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-000-MORB-ADLI06 NOT = " "
             MOVE WS-000-MORB-ADLI06 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.
     š*-
     š*----------------------------------------------------------------
       P300-MOVE-BASE-MORADA2.
     š*----------------------------------------------------------------
     š*-
           MOVE 1 TO WS-POS-MORADA
           IF WS-000-MORB-ADLI01 NOT = " "
             MOVE WS-000-MORB-ADLI01 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA2
             WITH POINTER WS-POS-MORADA.

           IF WS-000-MORB-ADLI02 NOT = " "
             MOVE WS-000-MORB-ADLI02 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA2
             WITH POINTER WS-POS-MORADA.

           IF WS-000-MORB-ADLI03 NOT = " "
             MOVE WS-000-MORB-ADLI03 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA2
             WITH POINTER WS-POS-MORADA.

           IF WS-000-MORB-ADLI04 NOT = " "
             MOVE WS-000-MORB-ADLI04 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA2
             WITH POINTER WS-POS-MORADA.

           IF WS-000-MORB-ADLI05 NOT = " "
             MOVE WS-000-MORB-ADLI05 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA2
             WITH POINTER WS-POS-MORADA.

           IF WS-000-MORB-ADLI06 NOT = " "
             MOVE WS-000-MORB-ADLI06 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA2
             WITH POINTER WS-POS-MORADA.
     š*-
     š*----------------------------------------------------------------
       P300-MOVE-CORR-MORADA2.
     š*----------------------------------------------------------------
     š*-
           MOVE 1 TO WS-POS-MORADA
           IF WS-001-MORC-ADLI01 NOT = " "
             MOVE WS-001-MORC-ADLI01 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA2
             WITH POINTER WS-POS-MORADA.

           IF WS-001-MORC-ADLI02 NOT = " "
             MOVE WS-001-MORC-ADLI02 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA2
             WITH POINTER WS-POS-MORADA.

           IF WS-001-MORC-ADLI03 NOT = " "
             MOVE WS-001-MORC-ADLI03 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA2
             WITH POINTER WS-POS-MORADA.

           IF WS-001-MORC-ADLI04 NOT = " "
             MOVE WS-001-MORC-ADLI04 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA2
             WITH POINTER WS-POS-MORADA.

           IF WS-001-MORC-ADLI05 NOT = " "
             MOVE WS-001-MORC-ADLI05 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA2
             WITH POINTER WS-POS-MORADA.

           IF WS-001-MORC-ADLI06 NOT = " "
             MOVE WS-001-MORC-ADLI06 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA2
             WITH POINTER WS-POS-MORADA.
     š*-
     š*----------------------------------------------------------------
       P300-MOVE-CORR-MORADA1.
     š*----------------------------------------------------------------
     š*-
           MOVE 1 TO WS-POS-MORADA
           IF WS-001-MORC-ADLI01 NOT = " "
             MOVE WS-001-MORC-ADLI01 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-001-MORC-ADLI02 NOT = " "
             MOVE WS-001-MORC-ADLI02 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-001-MORC-ADLI03 NOT = " "
             MOVE WS-001-MORC-ADLI03 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-001-MORC-ADLI04 NOT = " "
             MOVE WS-001-MORC-ADLI04 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-001-MORC-ADLI05 NOT = " "
             MOVE WS-001-MORC-ADLI05 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.

           IF WS-001-MORC-ADLI06 NOT = " "
             MOVE WS-001-MORC-ADLI06 TO WS-STRING
             PERFORM P300-COMPRIMENTO
             STRING  WS-STRING(1: WS-STRING-L )
             DELIMITED BY SIZE INTO NEWCINT-MORADA1
             WITH POINTER WS-POS-MORADA.
     š*-
     š*----------------------------------------------------------------
       P450-VALIDA-DTNASC.
     š*----------------------------------------------------------------
     š*-
           MOVE NEWCINT-DTNASC     TO WS-TST-DATE
           EXEC SQL
               SET :WS-VAL-DATE  = DATE(:WS-TST-DATE)
           END-EXEC
           EVALUATE SQLCODE
              WHEN +0
                  CONTINUE
              WHEN -180
                  MOVE "0001-01-01" TO NEWCINT-DTNASC
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P500-TRATA-BCBJCINT.
     š*----------------------------------------------------------------
     š*- Verifica se o Registo Já Existe
     š*-
           IF SIM-ENVIADA
             IF SIM-ALTER
                MOVE "UPD"  TO NEWCINT-INFTYPE
                PERFORM P500-UPDATE-BCBJCINT
             ELSE
                CONTINUE
             END-IF
           ELSE
             MOVE "INS"    TO NEWCINT-INFTYPE
             PERFORM P500-INSERT-BCBJCINT
           END-IF.
     š*----------------------------------------------------------------
       P500-TESTA-BCBJCINT.
     š*----------------------------------------------------------------
     š*- Verifica se o Registo Já Existe

           EXEC SQL
             SELECT  INFTYPE
                   , BPENV
                   , ANO
                   , MES
                   , VERSAO
                   , TIPOCLI
                   , DTNASC
                   , NIFNIPC
                   , REFORIG
                   , NOME
                   , MORADA1
                   , MORADA2
                   , NACIONALIDADE
                   , BINICCC
                   , TIPODOC
                   , NUMERO
                   , DATAEMI
                   , ENTEMITENTE
                   , PAIS
                   , CODERRO
                   , TMSCRIA
                   , USERCRIA
                   , TMSALT
                   , USERALT
             INTO   :OLDCINT-INFTYPE
                   ,:OLDCINT-BPENV
                   ,:OLDCINT-ANO
                   ,:OLDCINT-MES
                   ,:OLDCINT-VERSAO
                   ,:OLDCINT-TIPOCLI
                   ,:OLDCINT-DTNASC
                   ,:OLDCINT-NIFNIPC
                   ,:OLDCINT-REFORIG
                   ,:OLDCINT-NOME
                   ,:OLDCINT-MORADA1
                   ,:OLDCINT-MORADA2
                   ,:OLDCINT-NACIONALIDADE
                   ,:OLDCINT-BINICCC
                   ,:OLDCINT-TIPODOC
                   ,:OLDCINT-NUMERO
                   ,:OLDCINT-DATAEMI
                   ,:OLDCINT-ENTEMITENTE
                   ,:OLDCINT-PAIS
                   ,:OLDCINT-CODERRO
                   ,:OLDCINT-TMSCRIA
                   ,:OLDCINT-USERCRIA
                   ,:OLDCINT-TMSALT
                   ,:OLDCINT-USERALT

             FROM  BCBJCINT
                WHERE REFORIG = :NEWCINT-REFORIG
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
     š*-Iguala Campos para comparação Global
              SET   SIM-ENVIADA      TO TRUE
              MOVE  NEWCINT-INFTYPE  TO OLDCINT-INFTYPE
              MOVE  NEWCINT-BPENV    TO OLDCINT-BPENV
              MOVE  NEWCINT-CODERRO  TO OLDCINT-CODERRO
              MOVE  NEWCINT-ANO      TO OLDCINT-ANO
              MOVE  NEWCINT-MES      TO OLDCINT-MES
              MOVE  NEWCINT-VERSAO   TO OLDCINT-VERSAO
              MOVE  NEWCINT-TMSCRIA  TO OLDCINT-TMSCRIA
              MOVE  NEWCINT-USERCRIA TO OLDCINT-USERCRIA
              MOVE  NEWCINT-TMSALT   TO OLDCINT-TMSALT
              MOVE  NEWCINT-USERALT  TO OLDCINT-USERALT
              MOVE  OLDCINT-CODERRO  TO NEWCINT-CODERRO
              IF    NEWCINT-REC    = OLDCINT-REC
               SET NAO-ALTER TO TRUE
              ELSE
               SET SIM-ALTER TO TRUE
              END-IF
           WHEN SQLCODE-NOTFOUND
              SET   NAO-ENVIADA TO TRUE
              SET   NAO-ALTER   TO TRUE
           WHEN OTHER
              MOVE "BCBJCINT"        TO W-OBJECT-NAME
              SET CMD-SELECT         TO TRUE
              PERFORM  P990-ERRO-DB2
           END-EVALUATE.
     š*----------------------------------------------------------------
       P500-TESTA-BCBJCINT-NIF.
     š*----------------------------------------------------------------
     š*- Verifica se o Registo Nif Duplicado

           SET NAO-NIF-EXIST  TO TRUE

           EXEC SQL
             SELECT  1
             INTO  :WS-DUMMY
             FROM  BCBJCINT
                WHERE NIFNIPC = :NEWCINT-NIFNIPC
                 AND  REFORIG <> :NEWCINT-REFORIG
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
              SET SIM-NIF-EXIST  TO TRUE
           WHEN SQLCODE-NOTFOUND
              CONTINUE
           WHEN SQLCODE-DUPROWS
              SET SIM-NIF-EXIST  TO TRUE
           WHEN OTHER
              MOVE "BCBJCINT"        TO W-OBJECT-NAME
              SET CMD-SELECT         TO TRUE
              PERFORM  P990-ERRO-DB2
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P500-INSERT-BCBJCINT.
     š*----------------------------------------------------------------
     š*- Verifica se o Registo Já Existe ( NIF'S SUPLICADOS )
     š*-
           MOVE WS-TMS-NULA  TO NEWCINT-TMSALT
           MOVE "E"          TO NEWCINT-BPENV
           EXEC SQL
                 INSERT INTO BCBJCINT
                 VALUES ( :NEWCINT-INFTYPE
                        , :NEWCINT-BPENV
                        , :NEWCINT-ANO
                        , :NEWCINT-MES
                        , :NEWCINT-VERSAO
                        , :NEWCINT-TIPOCLI
                        , :NEWCINT-DTNASC
                        , :NEWCINT-NIFNIPC
                        , :NEWCINT-REFORIG
                        , :NEWCINT-NOME
                        , :NEWCINT-MORADA1
                        , :NEWCINT-MORADA2
                        , :NEWCINT-NACIONALIDADE
                        , :NEWCINT-BINICCC
                        , :NEWCINT-TIPODOC
                        , :NEWCINT-NUMERO
                        , :NEWCINT-DATAEMI
                        , :NEWCINT-ENTEMITENTE
                        , :NEWCINT-PAIS
                        , :NEWCINT-CODERRO
                        , :NEWCINT-TMSCRIA
                        , :NEWCINT-USERCRIA
                        , :NEWCINT-TMSALT
                        , :NEWCINT-USERALT)
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
             CONTINUE
           WHEN OTHER
              MOVE "BCBJCINT"          TO W-OBJECT-NAME
              SET CMD-INSERT           TO TRUE
              PERFORM  P990-ERRO-DB2
           END-EVALUATE.
     š*-
     š*----------------------------------------------------------------
       P500-UPDATE-BCBJCINT.
     š*----------------------------------------------------------------
     š*- Verifica se o Registo Já Existe
     š*-
           PERFORM P500-HIST-BCBJCINT.

           MOVE "E"     TO NEWCINT-BPENV
           EXEC SQL
                 UPDATE BCBJCINT
                 SET    INFTYPE       = :NEWCINT-INFTYPE
                      , BPENV         = :NEWCINT-BPENV
                      , ANO           = :NEWCINT-ANO
                      , MES           = :NEWCINT-MES
                      , VERSAO        = :NEWCINT-VERSAO
                      , TIPOCLI       = :NEWCINT-TIPOCLI
                      , DTNASC        = :NEWCINT-DTNASC
                      , NIFNIPC       = :NEWCINT-NIFNIPC
                      , REFORIG       = :NEWCINT-REFORIG
                      , NOME          = :NEWCINT-NOME
                      , MORADA1       = :NEWCINT-MORADA1
                      , MORADA2       = :NEWCINT-MORADA2
                      , NACIONALIDADE = :NEWCINT-NACIONALIDADE
                      , BINICCC       = :NEWCINT-BINICCC
                      , TIPODOC       = :NEWCINT-TIPODOC
                      , NUMERO        = :NEWCINT-NUMERO
                      , DATAEMI       = :NEWCINT-DATAEMI
                      , ENTEMITENTE   = :NEWCINT-ENTEMITENTE
                      , PAIS          = :NEWCINT-PAIS
                      , CODERRO       = :NEWCINT-CODERRO
                      , TMSCRIA       = :NEWCINT-TMSCRIA
                      , USERCRIA      = :NEWCINT-USERCRIA
                      , TMSALT        = CURRENT TIMESTAMP
                      , USERALT       = "BCBSCINT"
                  WHERE REFORIG = :NEWCINT-REFORIG
           END-EXEC.

           MOVE SQLCODE  TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
             CONTINUE
           WHEN OTHER
              MOVE "BCBJCINT"          TO W-OBJECT-NAME
              SET CMD-UPDATE           TO TRUE
              PERFORM  P990-ERRO-DB2
           END-EVALUATE.
     š*- Lista de Intervenientes
     š*-
     š*----------------------------------------------------------------
       P500-HIST-BCBJCINT.
     š*----------------------------------------------------------------
           EXEC SQL
           INSERT INTO BCBJHCINT
           SELECT      INFTYPE
                    ,  BPENV
                    ,  ANO
                    ,  MES
                    ,  VERSAO
                    ,  TIPOCLI
                    ,  DTNASC
                    ,  NIFNIPC
                    ,  REFORIG
                    ,  NOME
                    ,  MORADA1
                    ,  MORADA2
                    ,  NACIONALIDADE
                    ,  BINICCC
                    ,  TIPODOC
                    ,  NUMERO
                    ,  DATAEMI
                    ,  ENTEMITENTE
                    ,  PAIS
                    ,  CODERRO
                    ,  TMSCRIA
                    ,  USERCRIA
                    ,  TMSALT
                    ,  USERALT
                    , CURRENT TIMESTAMP
            FROM  BCBJCINT
              WHERE REFORIG = :NEWCINT-REFORIG
           END-EXEC.
     š*---------------------------------------------------------------------
       P300-COMPRIMENTO.
     š*---------------------------------------------------------------------
     š*--Retira Espaços  WS-STRING
     š*- WY -Comprimento Final
           MOVE ZEROES TO WS-POS-I.
           INSPECT FUNCTION REVERSE(WS-STRING)
                   TALLYING WS-POS-I      FOR LEADING SPACE.
           COMPUTE  WS-STRING-L = LENGTH OF WS-STRING  -  WS-POS-I + 1.

      *- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
       P990-ERRO-DB2.
      *- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *

           MOVE  SQLCODE                 TO  W-SQLCODE

           EVALUATE TRUE
           WHEN SQLCODE-NOTFOUND
                  STRING "ERRO DE DADOS: CHAVE INEXISTENTE NA TABELA <"
                                                  DELIMITED BY SIZE
                         W-OBJECT-NAME            DELIMITED BY SPACE
                         ">"                      DELIMITED BY SIZE
                  INTO MSG-ERRO-SQL
           WHEN SQLCODE-DUPLKEY
                 STRING "ERRO DE DADOS: CHAVE JÁ EXISTENTE NA TABELA <"
                                                  DELIMITED BY SIZE
                        W-OBJECT-NAME             DELIMITED BY SPACE
                        ">"                       DELIMITED BY SIZE
                   INTO MSG-ERRO-SQL
           WHEN SQLCODE-URESOURC
                STRING "ERRO DE SISTEMA: TABELA <"
                                                  DELIMITED BY SIZE
                       W-OBJECT-NAME              DELIMITED BY SPACE
                       "> INDISPONÍVEL. CONTACTE RESPONSÁVEL"
                                                  DELIMITED BY SIZE
                  INTO MSG-ERRO-SQL
           WHEN SQLCODE-DLKTMOUT
               STRING "INFO: TABELA <"            DELIMITED BY SIZE
                      W-OBJECT-NAME               DELIMITED BY SPACE
                      "> MOMENTANEAMENTE INDISPONÍVEL. TENTE DE NOVO"
                                                  DELIMITED BY SIZE
                 INTO MSG-ERRO-SQL
           WHEN OTHER
               STRING "ERRO: OBJECTO <"           DELIMITED BY SIZE
                      W-OBJECT-NAME               DELIMITED BY SPACE
                      ">, FUNCAO <"               DELIMITED BY SIZE
                      W-CMDEXEC                   DELIMITED BY SPACE
                      ">, C/ SQLCODE <"
                      W-EDTSQLC
                      ">."                        DELIMITED BY SIZE
                      INTO MSG-ERRO-SQL
           END-EVALUATE.
     š*
           INITIALIZE   KYCT900A
           MOVE MSG-ERRO-SQL    TO ERRMSG   OF  KYCT900A
           MOVE W-SQLCODE       TO ERRCOD   OF  KYCT900A
           MOVE "SQL"           TO ERRAPL   OF  KYCT900A
           MOVE W-OBJECT-NAME   TO ERROBJ   OF  KYCT900A
           MOVE  2              TO ERRRTC   OF  KYCT900A
           SET BCBBCINT-MSGSGBD TO TRUE
           MOVE W-OBJECT-NAME   TO BCBBCINT-IDPARERR
           MOVE W-SQLCODE       TO BCBBCINT-CODERR
           MOVE MSG-ERRO-SQL    TO BCBBCINT-DESCERR

           PERFORM    P995-INSERT-ERROS.
      *- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
       P995-INSERT-ERROS.
      *- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *

           MOVE   "KYCP001"      TO  ERRPRG OF KYCT900A.
           MOVE     WS-RACINE    TO  RACINE OF KYCT900A.

           EXEC SQL  INSERT
                INTO KYCT900A
                VALUES  (
                           :KYCT900A.RACINE
                         , :KYCT900A.REFOPE
                         , CURRENT TIMESTAMP
                         , :KYCT900A.ERRRTC
                         , :KYCT900A.ERRCOD
                         , :KYCT900A.ERRMSG
                         , :KYCT900A.ERRPRG
                         , :KYCT900A.ERRAPL
                         , :KYCT900A.ERROBJ
                         , :KYCT900A.ERRFLD
                         , :KYCT900A.ERRCMD
                         , :KYCT900A.ERRKEY1
                         , :KYCT900A.ERRVAL1
                         , :KYCT900A.ERRKEY2
                         , :KYCT900A.ERRVAL2 )
           END-EXEC.

     š*-
           MOVE SQLCODE          TO  W-SQLCODE, W-EDTSQLC.

           EVALUATE TRUE
           WHEN SQLCODE-OK
              ADD      1            TO  NR-ERR
           WHEN OTHER
              MOVE "INSERT-T900A"   TO W-OBJECT-NAME
              SET  CMD-INSERT       TO TRUE
              STRING "ERRO DE DADOS AO INSERIR ERRO  NA TABELA <"
                                                  DELIMITED BY SIZE
                        W-OBJECT-NAME             DELIMITED BY SPACE
                        ">"                       DELIMITED BY SIZE
                        W-SQLCODE                 DELIMITED BY SPACE
                        ">"                       DELIMITED BY SIZE
                   INTO MSG-ERRO-SQL
              DISPLAY MSG-ERRO-SQL
           END-EVALUATE.

     š*****************************************************************
       P999-FIMPGM.
     š*****************************************************************
           GOBACK.
      *- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
      *    FIM DO PROGRAMA BCBSCINT
      *- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
